 // Failed to get sources. Instead, stub sources have been generated by the disassembler.
 // Implementation of methods is unavailable.
package org.thymeleaf.spring6.view;
public class ThymeleafViewResolver extends org.springframework.web.servlet.view.AbstractCachingViewResolver implements org.springframework.core.Ordered {
  
  private static final org.slf4j.Logger vrlogger;
  
  public static final java.lang.String REDIRECT_URL_PREFIX = "redirect:";
  
  public static final java.lang.String FORWARD_URL_PREFIX = "forward:";
  
  private boolean redirectContextRelative;
  
  private boolean redirectHttp10Compatible;
  
  private boolean alwaysProcessRedirectAndForward;
  
  private boolean producePartialOutputWhileProcessing;
  
  private java.lang.Class<? extends org.thymeleaf.spring6.view.AbstractThymeleafView> viewClass;
  
  private java.lang.String[] viewNames;
  
  private java.lang.String[] excludedViewNames;
  
  private int order;
  
  private final java.util.Map<java.lang.String,java.lang.Object> staticVariables;
  
  private java.lang.String contentType;
  
  private boolean forceContentType;
  
  private java.lang.String characterEncoding;
  
  private org.thymeleaf.spring6.ISpringTemplateEngine templateEngine;
  
  public ThymeleafViewResolver() {
  }
  
  public  void setViewClass(java.lang.Class<? extends org.thymeleaf.spring6.view.AbstractThymeleafView> viewClass) {
  }
  
  protected  java.lang.Class<? extends org.thymeleaf.spring6.view.AbstractThymeleafView> getViewClass() {
    return null;
  }
  
  public org.thymeleaf.spring6.ISpringTemplateEngine getTemplateEngine() {
    return null;
  }
  
  public void setTemplateEngine(org.thymeleaf.spring6.ISpringTemplateEngine templateEngine) {
  }
  
  public  java.util.Map<java.lang.String,java.lang.Object> getStaticVariables() {
    return null;
  }
  
  public void addStaticVariable(java.lang.String name, java.lang.Object value) {
  }
  
  public  void setStaticVariables(java.util.Map<java.lang.String,?> variables) {
  }
  
  public void setOrder(int order) {
  }
  
  public int getOrder() {
    return 0;
  }
  
  public void setContentType(java.lang.String contentType) {
  }
  
  public java.lang.String getContentType() {
    return null;
  }
  
  public boolean getForceContentType() {
    return false;
  }
  
  public void setForceContentType(boolean forceContentType) {
  }
  
  public void setCharacterEncoding(java.lang.String characterEncoding) {
  }
  
  public java.lang.String getCharacterEncoding() {
    return null;
  }
  
  public void setRedirectContextRelative(boolean redirectContextRelative) {
  }
  
  public boolean isRedirectContextRelative() {
    return false;
  }
  
  public void setRedirectHttp10Compatible(boolean redirectHttp10Compatible) {
  }
  
  public boolean isRedirectHttp10Compatible() {
    return false;
  }
  
  public void setAlwaysProcessRedirectAndForward(boolean alwaysProcessRedirectAndForward) {
  }
  
  public boolean getAlwaysProcessRedirectAndForward() {
    return false;
  }
  
  public boolean getProducePartialOutputWhileProcessing() {
    return false;
  }
  
  public void setProducePartialOutputWhileProcessing(boolean producePartialOutputWhileProcessing) {
  }
  
  public void setViewNames(java.lang.String[] viewNames) {
  }
  
  public java.lang.String[] getViewNames() {
    return null;
  }
  
  public void setExcludedViewNames(java.lang.String[] excludedViewNames) {
  }
  
  public java.lang.String[] getExcludedViewNames() {
    return null;
  }
  
  protected boolean canHandle(java.lang.String viewName, java.util.Locale locale) {
    return false;
  }
  
  protected org.springframework.web.servlet.View createView(java.lang.String viewName, java.util.Locale locale) throws java.lang.Exception {
    return null;
  }
  
  protected org.springframework.web.servlet.View loadView(java.lang.String viewName, java.util.Locale locale) throws java.lang.Exception {
    return null;
  }
  
  static {} {
  }
}